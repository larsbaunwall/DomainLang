name: Build and test

on:
    workflow_dispatch:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Get version
              id: pkg
              run: echo "::set-output name=version::$(node -p "require('./dsl/dlang/package.json').version")"
              shell: bash

            - name: Construct filename
              id: filename
              run: echo "::set-output name=filename::domain-lang-${{ steps.pkg.outputs.version }}.vsix"
              shell: bash

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 21
                  cache: 'npm'
                  cache-dependency-path: ./dsl/dlang/package-lock.json
                
            - name: Install dependencies
              run: npm ci
              working-directory: ./dsl/dlang

            - name: Generate langium AST
              run: npm run langium:generate
              working-directory: ./dsl/dlang

            - name: Build project
              run: npm run build
              working-directory: ./dsl/dlang

            - name: Run tests
              run: npm test
              working-directory: ./dsl/dlang

            - name: Add build tag to git
              run: |
                git config --local user.email "action@github.com"
                git config --local user.name "GitHub Action"
                git tag "build-${{ github.run_number }}"
                git push --tags


            - name: Install vsce
              run: npm install @vscode/vsce

            - name: Build vsix
              run: npm run vscode:prepublish && vsce package
              working-directory: ./dsl/dlang

            - name: Upload build artifacts
              uses: actions/upload-artifact@v2
              with:
                name: build-artifacts
                path: .dsl/dlang/${{steps.filename.outputs.filename}}
                