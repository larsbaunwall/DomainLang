name: Build and test

on:
    workflow_dispatch:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 21
                  cache: 'npm'
                  cache-dependency-path: ./dsl/domain-lang/package-lock.json
                
            - name: Install dependencies
              run: npm ci
              working-directory: ./dsl/domain-lang

            - name: Generate langium AST
              run: npm run langium:generate
              working-directory: ./dsl/domain-lang

            - name: Build project
              run: npm run build
              working-directory: ./dsl/domain-lang

            - name: Run tests
              run: npm test
              working-directory: ./dsl/domain-lang
    release:
        needs: build
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch'
        steps:
            - name: Build VSIX ${{steps.filename.outputs.filename}}
              run: npm run vscode:prepublish && vsce package
              working-directory: ./dsl/domain-lang

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                      Changes in this Release
                  draft: true
                  prerelease: false

            - name: Upload release asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dsl/domain-lang/${{ steps.filename.outputs.filename }}
                  asset_name: ${{ steps.filename.outputs.filename }}
                  asset_content_type: application/octet-stream

            - name: Notify
              id: sdf
              run: |
                echo "Release created: ${{ steps.create_release.outputs.upload_url }}"
              shell: bash
