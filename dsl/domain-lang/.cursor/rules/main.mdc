---
description: 
globs: 
alwaysApply: true
---
# Main Entry Point

This is the main entry point for AI-based development when working with this codebase, but also serves as a great reference for developers.

Always follow these rule files very carefully, as they have been crafted to ensure consistency and high-quality code.

## High-Level Problem Solving Strategy

1. Understand the problem deeply. Carefully read the instructions and think critically about what is required.
2. Investigate the codebase. Explore relevant files, search for key functions, and gather context.
3. Develop a clear, step-by-step plan. Break down the fix into manageable, incremental steps.
4. Before each code change, always consult the relevant rule files, and follow the rules very carefully.
   - Failure to follow the rules is the main reason for making unacceptable changes.
5. Iterate until you are extremely confident the fix is complete.
   - When changing code, do not add comments about what you changed.

## Rules for implementing changes

Always consult the relevant rule files before each code change.

Please note that I often correct or even revert code you generated. If you notice that, take special care not to revert my changes.

Commit messages should be in imperative form, start with a capital letter, avoid ending punctuation, be a single line, and concisely describe changes and motivation.

## Project Structure

This project contains a Langium grammer, LSP server and modules, and can build a VSIX extension for VSCode

The project has this structure:

- [docs](mdc:docs): All project documentation should be created and maintained here
- [src](mdc:src): Contains application code:
    - [language](mdc:src/language): The main language module
        - [generated](mdc:src/language/generated): Autogenerated code. Never change. Regenerate via the `npm run langium:generate` command
        - [lsp](mdc:src/language/lsp): Features related to Language Server Protocol (LSP) implementation belong here
        - [services](mdc:src/language/services): Language specific services belong here
        - [domain-lang.langium](mdc:src/language/domain-lang.langium): The central grammar file using the Langium notation
    - [cli](mdc:src/cli): Contains the custom CLI for my DSL
- [test](mdc:test): Contains all tests for the project